version: '3.7'

services:
  postgresql:
    container_name: deegreepostgis-db-${epsg}-${dataset}
    build: 
      context: ./
      dockerfile: Dockerfile_db_${epsg}_${dataset}
    image: geosynchronization/postgis-${epsg}-${dataset}
    volumes:
      - db-volume:/var/lib/postgresql/data
    ports:
      - "5444:5432"
    restart: always
    environment:
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: ${dataset}_${epsg}

  deegree:
    container_name: deegreepostgis-wfs-${epsg}-${dataset}
    image: geosynchronization/deegree3
    depends_on:
      - postgresql
    ports:
      - "8181:8080"
    volumes:
      - ./srs/${epsg}/${dataset}/workspace:/deegree
    restart: always
    environment:
      DEEGREE_WORKSPACE_ROOT: /deegree

  subscriber:
    depends_on:
      - deegree
    container_name: deegreepostgis-subscriber
    image: geosynchronization/coresubscriber
    volumes:
      - ./subscriber:/data
    command: sh -c "crontab /data/cron; crond -f"

    # command: "crontab /data/cron && crond"
    # command: ["dotnet", "CORESubscriber.dll", "sync", "/data/provider.xml"]
    # command: ["dotnet", "CORESubscriber.dll", "add", "${providerurl}", "${username}", "${password}", "/data/${providerSettings}.xml"]

volumes:
  db-volume: